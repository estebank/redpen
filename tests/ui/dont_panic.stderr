error: indexing operations can panic if the indexed value isn't present
  --> $DIR/dont_panic.rs:69:13
   |
69 |     let _ = x[1];
   |             ^^^^
   |
note: the lint level is defined here
  --> $DIR/dont_panic.rs:2:9
   |
2  | #![deny(redpen::dont_panic)]
   |         ^^^^^^^^^^^^^^^^^^

error: calling `S::foo` can panic
  --> $DIR/dont_panic.rs:54:5
   |
54 |     S.foo();
   |     ^^^^^^^ this call can panic
   |
note: `S::foo` can panic here
  --> $DIR/dont_panic.rs:7:9
   |
6  |     fn foo(&self) {
   |     -------------
7  |         panic!("");
   |         ^^^^^^^^^^

error: calling `<S as A>::from_trait` can panic
  --> $DIR/dont_panic.rs:55:5
   |
55 |     S.from_trait();
   |     ^^^^^^^^^^^^^^ this call can panic
   |
note: `<S as A>::from_trait` can panic here
  --> $DIR/dont_panic.rs:13:9
   |
12 |     fn from_trait(&self) {
   |     --------------------
13 |         panic!();
   |         ^^^^^^^^

error: calling `<S as A>::from_a_impl` can panic
  --> $DIR/dont_panic.rs:56:5
   |
56 |     S.from_a_impl();
   |     ^^^^^^^^^^^^^^^ this call can panic
   |
note: `<S as A>::from_a_impl` can panic here
  --> $DIR/dont_panic.rs:23:9
   |
22 |     fn from_a_impl(&self) {
   |     ---------------------
23 |         panic!();
   |         ^^^^^^^^

error: calling `<S as B>::from_impl` can panic
  --> $DIR/dont_panic.rs:57:5
   |
57 |     S.from_impl();
   |     ^^^^^^^^^^^^^ this call can panic
   |
note: `<S as B>::from_impl` can panic here
  --> $DIR/dont_panic.rs:29:9
   |
28 |     fn from_impl(&self) {
   |     -------------------
29 |         panic!();
   |         ^^^^^^^^

error: calling `foo::{closure#1}` can panic
  --> $DIR/dont_panic.rs:66:5
   |
66 |     x();
   |     ^^^ this call can panic
   |
note: `foo::{closure#1}` can panic here
  --> $DIR/dont_panic.rs:65:17
   |
65 |     let x =  || panic!();
   |              -- ^^^^^^^^

error: calling `foo` can panic
  --> $DIR/dont_panic.rs:85:5
   |
85 |     foo();
   |     ^^^^^ this call can panic
   |
note: `foo` can panic here
  --> $DIR/dont_panic.rs:54:5
   |
53 |   fn foo() {
   |   --------
54 |       S.foo();
   |       ^^^^^^^
55 |       S.from_trait();
   |       ^^^^^^^^^^^^^^
56 |       S.from_a_impl();
   |       ^^^^^^^^^^^^^^^
57 |       S.from_impl();
   |       ^^^^^^^^^^^^^
...
61 | /     (|| {
62 | |         panic!();
63 | |     })();
   | |________^
...
66 |       x();
   |       ^^^
...
71 |       panic!("shouldn't happen!");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: calling `bar` can panic
  --> $DIR/dont_panic.rs:86:5
   |
86 |     bar();
   |     ^^^^^ this call can panic
   |
note: `bar` can panic here
  --> $DIR/dont_panic.rs:75:5
   |
74 | fn bar() {
   | --------
75 |     foo();
   |     ^^^^^
note: `foo` can panic here
  --> $DIR/dont_panic.rs:54:5
   |
53 |   fn foo() {
   |   --------
54 |       S.foo();
   |       ^^^^^^^
55 |       S.from_trait();
   |       ^^^^^^^^^^^^^^
56 |       S.from_a_impl();
   |       ^^^^^^^^^^^^^^^
57 |       S.from_impl();
   |       ^^^^^^^^^^^^^
...
61 | /     (|| {
62 | |         panic!();
63 | |     })();
   | |________^
...
66 |       x();
   |       ^^^
...
71 |       panic!("shouldn't happen!");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: calling `<S as A>::from_trait` can panic
  --> $DIR/dont_panic.rs:88:18
   |
88 |     trait_object(Box::new(S));
   |                  ^^^^^^^^^^^ this call can panic
   |
note: `<S as A>::from_trait` can panic here
  --> $DIR/dont_panic.rs:13:9
   |
12 |     fn from_trait(&self) {
   |     --------------------
13 |         panic!();
   |         ^^^^^^^^

error: calling `<S as A>::from_a_impl` can panic
  --> $DIR/dont_panic.rs:88:18
   |
88 |     trait_object(Box::new(S));
   |                  ^^^^^^^^^^^ this call can panic
   |
note: `<S as A>::from_a_impl` can panic here
  --> $DIR/dont_panic.rs:23:9
   |
22 |     fn from_a_impl(&self) {
   |     ---------------------
23 |         panic!();
   |         ^^^^^^^^

error: calling `boxed` can panic
  --> $DIR/dont_panic.rs:90:18
   |
90 |     trait_object(boxed());
   |                  ^^^^^^^ this call can panic
   |
note: `boxed` can panic here
  --> $DIR/dont_panic.rs:82:5
   |
81 | fn boxed() -> Box<dyn A> {
   | ------------------------
82 |     unimplemented!();
   |     ^^^^^^^^^^^^^^^^

error: calling `impl_fn::<S>` can panic
  --> $DIR/dont_panic.rs:91:5
   |
91 |     impl_fn(S);
   |     ^^^^^^^^^^ this call can panic
   |
note: `impl_fn::<S>` can panic here
  --> $DIR/dont_panic.rs:45:5
   |
44 | fn impl_fn(x: impl A) {
   | ---------------------
45 |     x.from_trait();
   |     ^^^^^^^^^^^^^^
46 |     x.from_a_impl();
   |     ^^^^^^^^^^^^^^^

error: calling `<S as A>::from_trait` can panic when the caller is monomorphized as `impl_fn::<S>`
  --> $DIR/dont_panic.rs:45:5
   |
45 |     x.from_trait();
   |     ^^^^^^^^^^^^^^ this call can panic
   |
note: `<S as A>::from_trait` can panic here
  --> $DIR/dont_panic.rs:13:9
   |
12 |     fn from_trait(&self) {
   |     --------------------
13 |         panic!();
   |         ^^^^^^^^

error: calling `<S as A>::from_a_impl` can panic when the caller is monomorphized as `impl_fn::<S>`
  --> $DIR/dont_panic.rs:46:5
   |
46 |     x.from_a_impl();
   |     ^^^^^^^^^^^^^^^ this call can panic
   |
note: `<S as A>::from_a_impl` can panic here
  --> $DIR/dont_panic.rs:23:9
   |
22 |     fn from_a_impl(&self) {
   |     ---------------------
23 |         panic!();
   |         ^^^^^^^^

error: calling `foo` can panic
  --> $DIR/dont_panic.rs:75:5
   |
75 |     foo();
   |     ^^^^^ this call can panic
   |
note: `foo` can panic here
  --> $DIR/dont_panic.rs:54:5
   |
53 |   fn foo() {
   |   --------
54 |       S.foo();
   |       ^^^^^^^
55 |       S.from_trait();
   |       ^^^^^^^^^^^^^^
56 |       S.from_a_impl();
   |       ^^^^^^^^^^^^^^^
57 |       S.from_impl();
   |       ^^^^^^^^^^^^^
...
61 | /     (|| {
62 | |         panic!();
63 | |     })();
   | |________^
...
66 |       x();
   |       ^^^
...
71 |       panic!("shouldn't happen!");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: calling `A` can panic in a trait object
  --> $DIR/dont_panic.rs:49:5
   |
49 |     x.from_trait();
   |     ^^^^^^^^^^^^^^
   |
note: the following `fn` definition can panic
  --> $DIR/dont_panic.rs:13:9
   |
12 |     fn from_trait(&self) {
   |     --------------------
13 |         panic!();
   |         ^^^^^^^^

error: calling `A` can panic in a trait object
  --> $DIR/dont_panic.rs:50:5
   |
50 |     x.from_a_impl();
   |     ^^^^^^^^^^^^^^^
   |
note: the following `fn` definition can panic
  --> $DIR/dont_panic.rs:23:9
   |
22 |     fn from_a_impl(&self) {
   |     ---------------------
23 |         panic!();
   |         ^^^^^^^^

error: aborting due to 17 previous errors

